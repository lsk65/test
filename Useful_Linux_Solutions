Junk1

................................................................................

The following IPv4 address ranges are reserved for the private networks:

10.0.0.0/8
172.16.0.0/12
192.168.0.0/16


Class A	10.0.0.0	255.0.0.0	Larger networks with many hosts
Class B	172.16.0.0	255.255.0.0	Medium networks with a moderate hosts
Class C	192.168.0.0	255.255.255.0	Smaller networks with fewer hosts

Name	First octet	Subnets	# Hosts		Description
=======	===========	=======	=======		==============================
Class A	1 to 126	126	16.7m		Many hosts per network.
Class B	128 to 191	16,384	65,536		Many hosts per network.
Class C	192 to 223	2.1m	254		Many networks with fewer hosts
						per network.

................................................................................
The following directories, or symbolic links to directories, are required in /.


Directory  Description
=========  ===========================================================
bin        Essential command binaries
boot       Static files of the boot loader
dev        Device files
etc        Host-specific system configuration
home       User home directories (optional)
lib        Essential shared libraries and kernel modules
lib<qual>  Alternate format essential shared libraries (optional)
media      Mount point for removable media
mnt        Mount point for mounting a filesystem temporarily
opt        Add-on application software packages
root       Home directory for the root user (optional)
run        Data relevant to running processes
sbin       Essential system binaries
srv        Data for services provided by this system
tmp        Temporary files
usr        Secondary hierarchy
var        Variable data


Each directory listed above is specified in detail in separate subsections
below. /usr and /var each has a complete section in this document due to the
complexity of those directories.

................................................................................
Patching software:
==================

In RPM packaging, instead of modifying the original source code, we keep it, and
use patches on it.

A patch is a source code that updates other source code. It is formatted as a
diff, because it represents what is different between two versions of the text.
A diff is created using the diff utility, which is then applied to the source
code using the patch utility.

Note!
Software developers often use Version Control Systems such as git to manage
their code base. Such tools provide their own methods of creating diffs or
patching software.

The following example shows how to create a patch from the original source code
using diff, and how to apply the patch using patch.

This procedure shows how to create a patch from the original source code for
cello.c.


Procedure:
..........

01. Preserve the original source code:

$ cp -p cello.c cello.c.orig
The -p option is used to preserve mode, ownership, and timestamps.

02. Modify cello.c as needed:

#include <stdio.h>

int main(void) {
    printf("Hello World from my very first patch!\n");
    return 0;
}

03. Generate a patch using the diff utility:

$ diff -Naur cello.c.orig cello.c
--- cello.c.orig        2016-05-26 17:21:30.478523360 -0500
+ cello.c     2016-05-27 14:53:20.668588245 -0500
@@ -1,6 +1,6 @@
 #include<stdio.h>

 int main(void){
-    printf("Hello World!\n");
+    printf("Hello World from my very first patch!\n");
     return 0;
 }
\ No newline at end of file
Lines starting with a - are removed from the original source code and replaced with the lines that start with +.


Using the Naur options with the diff command is recommended because it fits the majority of usual use cases. However, in this particular case, only the -u option is necessary. Particular options ensure the following:

-N (or --new-file) - Handles absent files as if they were empty files.
-a (or --text) - Treats all files as text. As a result, the files that diff classifies as binaries are not ignored.
-u (or -U NUM or --unified[=NUM]) - Returns output in the form of output NUM (default 3) lines of unified context. This is an easily readable format that allows fuzzy matching when applying the patch to a changed source tree.
-r (or --recursive) - Recursively compares any subdirectories that are found.

For more information on common arguments for the diff utility, see the diff manual page.

Save the patch to a file:

$ diff -Naur cello.c.orig cello.c > cello-output-first-patch.patch
Restore the original cello.c:

$ cp cello.c.orig cello.c
The original cello.c must be retained, because when an RPM is built, the original file is used, not the modified one. For more information, see Section 3.2, “Working with SPEC files”.

The following procedure shows how to patch cello.c using cello-output-first-patch.patch, built the patched program, and run it.

Redirect the patch file to the patch command:

$ patch < cello-output-first-patch.patch
patching file cello.c
Check that the contents of cello.c now reflect the patch:

$ cat cello.c
#include<stdio.h>

int main(void){
    printf("Hello World from my very first patch!\n");
    return 1;
}
Build and run the patched cello.c:

$ make clean
rm cello

$ make
gcc -g -o cello cello.c

$ ./cello
Hello World from my very first patch!

................................................................................
Process States:
===============

               D    uninterruptible sleep (usually IO)
               R    running or runnable (on run queue)
               S    interruptible sleep (waiting for an event to complete)
               T    stopped by job control signal
               t    stopped by debugger during the tracing
               W    paging (not valid since the 2.6.xx kernel)
               X    dead (should never be seen)
               Z    defunct ("zombie") process, terminated but not reaped by its parent
 
       For BSD formats and when the stat keyword is used, additional characters may be displayed:
 
               <    high-priority (not nice to other users)
               N    low-priority (nice to other users)
               L    has pages locked into memory (for real-time and custom IO)
               s    is a session leader
               l    is multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
               +    is in the foreground process group

................................................................................
Install Red Hat Virtualization Host Group:

sudo dnf group install "Virtualization Host"
sudo dnf install qemu-kvm virt-install virt-viewer

................................................................................
Hypervisors Types:

Bare Metal/Type 1 Hypervisors:
These hypervisors are installed directly on top of the physical machine. They
are considered secure hypervisors when compared to Type2 Hypervisors. They
include Microsoft Hyper-V, open-source Kernel-based VMs (KVMs), VMware ESXi

Hosted/Type 2 Hypervisors:
These are installed on top of an existing operating system. They have more
latency as compared to Type 1 due to their hosted nature. These include VMware
Workstation and Oracle VirtualBox

................................................................................
Confirming Virtualization Extensions:

   * Intel VT = Intel
   * AMD-V    = AMD

Do the below:

01. cat /proc/cpuinfo | egrep --color "vmx|svm"


02. lscpu | grep Virtualization

Virtualization:                  VT-x
Virtualization type:             full


NOTE: Systems that have NO real virtualization capabilities will show:
*****

Virtualization type:             full

................................................................................
The ‘getent’ command can query several databases:

‘passwd’: Retrieves user account information.
‘group‘: Fetches group account details.
‘hosts’: Looks up hostnames and IP addresses.
‘services’: Displays network services and their associated ports.
‘protocols’: Lists network protocols.
‘networks’: Retrieves network names.
‘shadow’: Shows user password information (requires proper permissions).
‘aliases’: Provides mail alias information.

................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
Kernel Command Line Parameters:
===============================

ACPI    ACPI support is enabled.
AGP     AGP (Accelerated Graphics Port) is enabled.
ALSA    ALSA sound support is enabled.
APIC    APIC support is enabled.
APM     Advanced Power Management support is enabled.
ARM     ARM architecture is enabled.
AX25    Appropriate AX.25 support is enabled.
BLACKFIN Blackfin architecture is enabled.
CLK     Common clock infrastructure is enabled.
CMA     Contiguous Memory Area support is enabled.
DRM     Direct Rendering Management support is enabled.
DYNAMIC_DEBUG Build in debug messages and enable them at runtime
EDD     BIOS Enhanced Disk Drive Services (EDD) is enabled
EFI     EFI Partitioning (GPT) is enabled
EIDE    EIDE/ATAPI support is enabled.
EVM     Extended Verification Module
FB      The frame buffer device is enabled.
FTRACE  Function tracing enabled.
GCOV    GCOV profiling is enabled.
HW      Appropriate hardware is enabled.
IA-64   IA-64 architecture is enabled.
IMA     Integrity measurement architecture is enabled.
IOSCHED More than one I/O scheduler is enabled.
IP_PNP  IP DHCP, BOOTP, or RARP is enabled.
IPV6    IPv6 support is enabled.
ISAPNP  ISA PnP code is enabled.
ISDN    Appropriate ISDN support is enabled.
JOY     Appropriate joystick support is enabled.
KGDB    Kernel debugger support is enabled.
KVM     Kernel Virtual Machine support is enabled.
LIBATA  Libata driver is enabled
LP      Printer support is enabled.
LOOP    Loopback device support is enabled.
M68k    M68k architecture is enabled.
                These options have more detailed description inside of
                Documentation/m68k/kernel-options.txt.
MDA     MDA console support is enabled.
MIPS    MIPS architecture is enabled.
MOUSE   Appropriate mouse support is enabled.
MSI     Message Signaled Interrupts (PCI).
MTD     MTD (Memory Technology Device) support is enabled.
NET     Appropriate network support is enabled.
NUMA    NUMA support is enabled.
NFS     Appropriate NFS support is enabled.
OSS     OSS sound support is enabled.
PV_OPS  A paravirtualized kernel is enabled.
PARIDE  The ParIDE (parallel port IDE) subsystem is enabled.
PARISC  The PA-RISC architecture is enabled.
PCI     PCI bus support is enabled.
PCIE    PCI Express support is enabled.
PCMCIA  The PCMCIA subsystem is enabled.
PNP     Plug & Play support is enabled.
PPC     PowerPC architecture is enabled.
PPT     Parallel port support is enabled.
PS2     Appropriate PS/2 support is enabled.
RAM     RAM disk support is enabled.
RDT     Intel Resource Director Technology.
S390    S390 architecture is enabled.
SCSI    Appropriate SCSI support is enabled.
                A lot of drivers have their options described inside
                the Documentation/scsi/ sub-directory.
SECURITY Different security models are enabled.
SELINUX SELinux support is enabled.
APPARMOR AppArmor support is enabled.
SERIAL  Serial support is enabled.
SH      SuperH architecture is enabled.
SMP     The kernel is an SMP kernel.
SPARC   Sparc architecture is enabled.
SWSUSP  Software suspend (hibernation) is enabled.
SUSPEND System suspend states are enabled.
TPM     TPM drivers are enabled.
TS      Appropriate touchscreen support is enabled.
UMS     USB Mass Storage support is enabled.
USB     USB support is enabled.
USBHID  USB Human Interface Device support is enabled.
V4L     Video For Linux support is enabled.
VMMIO   Driver for memory mapped virtio devices is enabled.
VGA     The VGA console has been enabled.
VT      Virtual terminal support is enabled.
WDT     Watchdog support is enabled.
XT      IBM PC/XT MFM hard disk support is enabled.
X86-32  X86-32, aka i386 architecture is enabled.
X86-64  X86-64 architecture is enabled.
                More X86-64 boot options can be found in
                Documentation/x86/x86_64/boot-options.txt .
X86     Either 32-bit or 64-bit x86 (same as X86-32+X86-64)
X86_UV  SGI UV support is enabled.
XEN     Xen support is enabled
In addition, the following text indicates that the option:

BUGS=   Relates to possible processor bugs on the said processor.
KNL     Is a kernel start-up parameter.
BOOT    Is a boot loader parameter.

................................................................................
FHS 2.3:
========

Directory     Description
---------     --------------------------------------------------------
bin           Essential command binaries
boot          Static files of the boot loader
dev           Device files
etc           Host-specific system configuration
lib           Essential shared libraries and kernel modules
media         Mount point for removeable media
mnt           Mount point for mounting a filesystem temporarily
opt           Add-on application software packages
sbin          Essential system binaries
srv           Data for services provided by this system
tmp           Temporary files
usr           Secondary hierarchy
var           Variable data

OPTIONAL:
*********

home          User home directories (optional)
lib<qual>     Alternate format essential shared libraries (optional)
root          Home directory for the root user (optional)

................................................................................
Grub:

Reinstalling to Device:
***********************
BIOS: grub2-install /dev/sda
UEFI: yum reinstall grub2-efi shim
reboot

Resetting GRUB:
***************
Remove configs:
rm /etc/grub.d/*
rm /etc/sysconfig/grub
Reinstall pkgs:
BIOS: yum reinstall grub2-tools
UEFI: yum reinstall grub2-efi shim grub2-tools
Rebuild the grub.cfg:
BIOS: grub2-mkconfig -o /boot/grub2/grub.cfg
UEFI: grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg

grub CMDLINE:
*************
/etc/default/grub
GRUB_CMDLINE_LINUX="crashkernel=1G-4G:192M,4G-64G:256M,64G-:512M resume=/dev/mapper/rhel-swap rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap"

................................................................................

File and Directory Flags:
=========================
test -e filename: Checks whether the file exists or not
test -d filename: Checks whether the file is a directory or not
test -f filename: Checks whether the file is a regular file or not
test -s filename: Checks whether the file is empty or not
test -r filename: Checks whether the file is readable or not
test -w filename: Checks whether the file is writable or not
test -x filename: Checks whether the file is executable or not

String Comparison Flags
string1 = string2: Checks whether the two strings are equal or not
string1 != string2: Checks whether the two strings are not equal or not
-n string: Checks whether the string is empty or not
-z string: Checks whether the string is empty or not

Numeric Comparison Flags
num1 -eq num2: Checks whether the two numbers are equal or not
num1 -ne num2: Checks whether the two numbers are not equal or not
num1 -gt num2: Checks whether the first number is greater than the second number or not
num1 -ge num2: Checks whether the first number is greater than or equal to the second number or not
num1 -lt num2: Checks whether the first number is less than the second number or not
num1 -le num2: Checks whether the first number is less than or equal to the second number or not

Conditional flags
condition1 -a condition2: Checks whether the two conditions are true or not
condition1 -o condition2: Checks whether the two conditions are true or not
!expression: Checks whether the expression is true or not

................................................................................
Using grubby:

grubby --info=ALL | grep title | sort -f

title="Red Hat Enterprise Linux (0-rescue-<some-valid-machine-id>) 8.10 (Ootpa)"
title="Red Hat Enterprise Linux (0-rescue-f2072f49633140e4819aa96cb690ea96) 8.6 (Ootpa)"
title="Red Hat Enterprise Linux (4.18.0-477.27.1.el8_8.x86_64) 8.8 (Ootpa)"
title="Red Hat Enterprise Linux (4.18.0-513.11.1.el8_9.x86_64) 8.9 (Ootpa)"
title="Red Hat Enterprise Linux (4.18.0-553.16.1.el8_10.x86_64) 8.10 (Ootpa)"
title="Red Hat Enterprise Linux (4.18.0-553.8.1.el8_10.x86_64) 8.10 (Ootpa)"

................................................................................
Getting the machine's ID:

cat /etc/machine-id
c73d38686c23498aa8edf70749ac18ea

................................................................................
CUPS:
=====


CONFIGURING:
============
lpadmin -p PSTLEC-PRT05 -m lsb/usr/HP/hp-color_laserjet-ps.ppd.gz -v socket://10.80.171.43:515 -E
or
lpadmin -p PSTLEC-PRT05 -m lsb/usr/HP/hp-color_laserjet-ps.ppd.gz -v socket://10.80.171.43:9100 -E


PRINT FILE:
===========
lp fileName
lpr fileName
or
lpr -o portrait -o media=letter -P PSTLEC-PRT05 fileName


VIEW QUEUE:
===========
lpstat -W <all|completed|not-completed> -P PSTLEC-PRT05 [-u app-1474-adf-svc]


MOVE JOB:
=========
lpmove ID# NPl127FAF


PRINTERS AVAILABLE:
===================
lpstat -p -d

printer NPl127FAF is idle.  enabled since Thu 10 Oct 2024 05:42:15 PM CDT
printer PSTLEC-PRT05 is idle.  enabled since Wed 16 Oct 2024 02:50:18 PM CDT
no system default destination


SET DEFAULT:
============
lpoptions -d PSTLEC-PRT05


PRINT FROM APP:
===============
program | lp
program | lp -d printer
program | lpr
program | lpr -P printer


PRINT OPTIONS:
==============
Letter - US Letter (8.5x11 inches, or 216x279mm)
Legal - US Legal (8.5x14 inches, or 216x356mm)
A4 - ISO A4 (8.27x11.69 inches, or 210x297mm)
COM10 - US #10 Envelope (9.5x4.125 inches, or 241x105mm)
DL - ISO DL Envelope (8.66x4.33 inches, or 220x110mm)
Transparency - Transparency media type or source
Upper - Upper paper tray
Lower - Lower paper tray
MultiPurpose - Multi-purpose paper tray
LargeCapacity - Large capacity paper tray

Copies:
lp -n num-copies filename
lpr -#num-copies filename

Size:
-o media=letter

Single Side:
-o sides=one-sided

Both Sides:
-o sides=two-sided-short-edge # good for landscape
-o sides=two-sided-long-edge  # good for portrait

Banner Page(s):
-o job-sheets=none
-o job-sheets=standard
-o job-sheets=classified,classified

Job Priority:
-o job-priority=NNN  # from 1 (lowest) to 100 (highest)

Selecting a Range:
-o page-ranges=1
-o page-ranges=1-4
-o page-ranges=1-4,7,9-12


PRINTER SPECIFIC OPTIONS:
=========================
lpoptions -p PSTLEC-PRT0 -l
HPOption_Rear_Feed_Unit/Rear Feed Unit: True *False
InstalledMemory/Memory Configuration: *8Meg 16Meg 24Meg 32Meg 40Meg
PageSize/Page Size: *Letter LetterSmall Legal LegalSmall Tabloid Executive A4 A4Small A3
HPHalftone/Halftone: *Cluster Scatter
ColorModel/Print Color as Gray: Gray *CMYK
HPPantone/PANTONE(R): True *False
InputSlot/Paper Source: *Auto Front Rear
ManualFeed/Manual Feed: True *False
OutputBin/Output Bin: *Upper Lower
Smoothing/Resolution Enhancement: None Light *Medium Dark


CREATING SAVED OPTIONS:
=======================
NOTE: Instances are copies of a printer that have certain "saved" options:

Save one like so:
lpoptions -p printer/instance -o name=value ...etc.

Refer to it like so:
-p printer/instance: (printer name/instance name)



................................................................................
OpenSSL root issues:

Root cert in location:
/etc/pki/ca-trust/source/anchors/
Copy root cert into the above:

Testing:
openssl s_client -connect abfraicmaster.local.net:443

Run the below to update location info:
update-ca-trust

................................................................................
RPM VERIFY OPTIONS:

The general form of an rpm verify command is

rpm {-V|--verify} [select-options] [verify-options]

Verifying a package compares information about the installed files in the package with information about the files taken from the package metadata stored in the rpm database.
Among other things, verifying compares the size, digest, permissions, type, owner and group of each file.  Any discrepancies are displayed.  Files  that  were  not  installed
from the package, for example, documentation files excluded on installation using the "--excludedocs" option, will be silently ignored.

The package selection options are the same as for package querying (including package manifest files as arguments).

The format of the output is a string of 9 characters, a possible attribute marker:

   c %config configuration file.
   d %doc documentation file.
   g %ghost file (i.e. the file contents are not included in the package payload).
   l %license license file.
   r %readme readme file.

from  the  package  header,  followed  by  the  file  name.   Each  of  the  9 characters denotes the result of a comparison of attribute(s) of the file to the value of those
attribute(s) recorded in the database.  A single "." (period) means the test passed, while a single "?" (question mark) indicates the test could not be performed  (e.g.  file
permissions prevent reading). Otherwise, the (mnemonically emBoldened) character denotes failure of the corresponding --verify test:

   S file Size differs
   M Mode differs (includes permissions and file type)
   5 digest (formerly MD5 sum) differs
   D Device major/minor number mismatch
   L readLink(2) path mismatch
   U User ownership differs
   G Group ownership differs
   T mTime differs
   P caPabilities differ

................................................................................
Using one of the "sums" to query a "hash" value for files, etc.:

As you are probably already aware, the md5sum hash is no longer a secure bet!

PLEASE USE: One of the below SHA-2 algorithm, implemented in the programs:

 -> sha224sum
 -> sha256sum
 -> sha384sum
 -> sha512sum

................................................................................
Size Comparisons and More:

1 kB	= 1000 bytes
1 KiB	= 1024 bytes



Prefixes for binary multiples:
==============================

Factor	Name	Symbol	Origin			Derivation
======	====	==	==================	============
210	kibi	Ki	kilobinary: (210)1	kilo: (103)1
220	mebi	Mi	megabinary: (210)2 	mega: (103)2
230	gibi	Gi	gigabinary: (210)3	giga: (103)3
240	tebi	Ti	terabinary: (210)4	tera: (103)4
250	pebi	Pi	petabinary: (210)5	peta: (103)5
260	exbi	Ei	exabinary: (210)6	exa: (103)6


Examples and comparisons with SI prefixes:
==============	================================
one kibibit	1 Kibit = 210 bit = 1024 bit
one kilobit	1 kbit = 103 bit = 1000 bit
one byte	1 B = 23 bit = 8 bit
one mebibyte	1 MiB = 220 B = 1 048 576 B
one megabyte	1 MB = 106 B = 1 000 000 B
one gibibyte	1 GiB = 230 B = 1 073 741 824 B
one gigabyte	1 GB = 109 B = 1 000 000 000 B

................................................................................
You can test smtp auth manually by:

Connecting to the smtp submission port using the openssl client and sending the
auth login command as shown below:


openssl s_client -connect localhost:587 -starttls smtp -ign_eof

.....
250 SMTPUTF8
auth login (<-- send login command)
334 VXNlcm5hbWU6
ABCDEF01234 (<-- base64 encoded username)
334 UGFzc3dvcmQ6
ABCDEF01234 (<-- base64 encoded password)
235 2.7.0 Authentication successful
quit (<-- disconnect)
221 2.0.0 Bye

................................................................................
How to specify extended ascii characters on configuration lines, etc.:

Non-alphanumeric characters must be represented as \xNN, where NN is the
hexadecimal representation of the character.

space = \x20
etc.  = etc.

................................................................................
The man pages:

You can change the program used to view man pages with the -P flag:
man -P cat command_name

It's also worth noting that man automatically detects when you pipe its output,
instead of viewing it on the screen. So, if you're going to process it with
something else, you can skip straight to that step:
man command_name | grep search_string

How to dump to a file:
man command_name > formatted_man_page.txt

Convert "man page" to text file:
man ls | col -b > ~/Desktop/man_ls.txt
man perlcheat | col -b > perlcheat.txt
man -P cat ls > man_ls.txt

................................................................................
Squeeze spaces out of a text file:

sed 's/ \+/ /g'
sed 's/\s\+/ /g'
sed -E 's/\s+/ /g'
sed 's/  */ /g'
sed 's/ \{1,\}/ /g'
or
awk '{$1=$1}1'
or
tr -s ' '

................................................................................
Change case:

awk '{$0=tolower($0); print $0 }' test.txt
or
tr '[A-Z]' '[a-z]'
or
sed 
................................................................................
How to match an occurrence in a multiple sequence of anything:

echo "Hiiii" | sed 's/\(i\)*/\1/g'

Hiiii becomes Hi

................................................................................
How to remove empty lines:

awk 'NF' file
awk /./
awk 'length'
awk '/^[ \t]*$/ {next;} {print}'
awk '!/^[ \t]*$/'
or
grep .
grep '\S' or grep -P '\S'
grep -v ^$
grep -v '^$'
grep -v '^\s*$'
grep -v '^[[:space:]]*$'
or
sed '/^[[:space:]]*$/d'
sed -r '/^\s*$/d'
sed '/^[[:space:]]*$/d'
sed '/^\s*$/d'
sed '/^$/d'
sed -n '/^\s*$/!p'

sed super space squeezer:
sed 's/^ *//; s/ *$//; /^$/d; /^\s*$/d; s/  */ /g'
The break-down:
's/^ *//'   => left trim
's/ *$//'   => right trim
'/^$/d'     => remove empty line
'/^\s*$/d'  => delete lines which may contain white space
's/  */ /g' => squeeze 2+ down to 1

or without sed/awk/perl/etc.:
strings

................................................................................
What is the purpose of the : (colon) GNU Bash builtin?

if command; then :; else ...; fi

Historically, Bourne shells didn't have true and false as built-in commands.
true was instead simply aliased to :, and false to something like let 0.

: is slightly better than true for portability to ancient Bourne-derived
shells. As a simple example, consider having neither the ! pipeline operator
nor the || list operator (as was the case for some ancient Bourne shells). This
leaves the else clause of the if statement as the only means for branching
based on exit status:

................................................................................
How to count or total columns of decimal-based numbers:

In this example, we've got three seperate columns of numbers to count:

awk '{ a+=$1 }{ b+=$2 }{ c+=$3 } END { print a " " b " " c }' numbersFile

awk '{ a+=$1 }{ b+=$2 }{ c+=$3 } END { print a " | " b " | " c }' j2

................................................................................
How to download entire website:

wget -r -p -U Mozilla --wait=10 --limit-rate=35K https://www.thegeekstuff.com

................................................................................
How to run a python webserver:

In python v2:
python -m SimpleHTTPServer 8012
 
#(8069=port number on which your python server is configured)

or

In python v3
python3 -m http.server 7034   #(any free port number)

................................................................................
Download SSL/TLS pem format cert from https web host:

openssl s_client -showcerts -connect google.com:443 </dev/null 2>/dev/null| \
openssl x509 -outform PEM > /tmp/google.com.cer

................................................................................
Add a DNS server on the fly

Since systemd-resolved was implemented, add a DNS server have become weirder and
harder than before. With this command, you can add a DNS server on-the-fly tied
to an specific interface

sudo systemd-resolve --interface <NombreInterfaz> --set-dns <IPDNS> --set-domain mydomain.com

................................................................................
Interactive vs Non-Interactive:

tty -s ; echo $?
0 = Interactive
1 = Non-Interactive

if [ "${-#*i}" == "$-" ] ; then echo Non-Interactive ; else echo Interactive ; fi

ALSO:
if [[ $- == *i* ]]; then blah blah:

echo $-
himBH

ssh -q server.domain.com 'echo $-'
shc

................................................................-................
When a version of OpenSSH disables ssh-dss:

In a nutshell, you should add the option -oHostKeyAlgorithms=+ssh-dss to any
SSH commands as seen below:

ssh -oHostKeyAlgorithms=+ssh-dss root@192.168.8.109
ssh -oHostKeyAlgorithms=+ssh-ed25519 srv.prod.junk.net

You can also add a host pattern in your ~/.ssh/config so you don't have to
specify the key algorithm every time:

Host SV1
  HostName 192.168.8.109 / sv1.dom.com
  HostKeyAlgorithms=+ssh-dss

Note: you may also wish to use the asterisk in a many, many case...

................................................................................
KRB5 Logging:

/var/log/krb5kdc.log primary log file for the Kerberos KDC server.
/var/log/kadmind.log primary log file for the Kerberos administration server

NOTE: Locations for these files are configured in the krb5.conf file. They can
      be different on some systems

................................................................................
Apache Logs:

/var/log/httpd/           Log files for the Apache web server.
/var/log/httpd/access_log Standard access and error logs for Apache servers
/var/log/httpd/error_log  Messages specific to IdM are recorded along with the
                          Apache messages because the IdM web UI and the
                          RPC command-line interface use Apache. The access
                          logs log mostly only the user principal and the URI
                          used, which is often an RPC endpoint. The error logs
                          contain the IdM server logs.

................................................................................
Certificate System Logs:

/var/log/pki/             Various

................................................................................
awk how to replace a specific field contents:

awk -F ',' '{OFS=FS}{ $4="neither_sssd_or_vasd_installed" ; print   }' fileName

................................................................................
How to clear the SSSD cache:

systemctl stop sssd
rm -r /var/lib/sss/db/*
systemctl start sssd

................................................................................
ssh issues:

ssh -oHostKeyAlgorithms=+ssh-ed25519 server.prod.junk.net

................................................................................
dealing with spaces in names:

x='App_547_Unix Access'
echo "${x//%20/ }"
App_547_Unix Access

................................................................................
XFS:

lsblk
partprobe /dev/sdc
pvcreate /dev/sdc
vgextend /dev/vg_root /dev/sdc
lvextend -L +55G /dev/vg_root/lv_tmp
xfs_growfs /dev/vg_root/lv_tmp

................................................................................
How to split a file or incoming text into separate files based on patterns:

cat fileName.txt | csplit - '/THIS POINT$/' '{*}'

................................................................................
Add FIPS:

/etc/default/grub:
==================
GRUB_CMDLINE_LINUX="boot=UUID=b087d4d8-e9f4-4289-a019-78663103011c nofb splash=quiet crashkernel=auto rd.lvm.lv=VolGroup00/lv_root rd.lvm.lv=VolGroup00/lv_swap rhgb quiet fips=1"

Regenerate grub:
================
After making changes to the grub configuration file, you need to regenerate the
grub configuration file by running the following command:

grub2-mkconfig -o /boot/grub2/grub.cfg

If your system is configured to use UEFI, run this command instead:
grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg

................................................................................
Check a port:

telnet IP/FQDN PORT
telnet 10.20.10.13 443
telnet server.domain 443

nc -vz IP/FQDN PORT
nc -vz 10.20.10.13 443
nc -vz server.domain 443

Linux:
timeout 2 2>/dev/null bash -c "</dev/tcp/snow-external.testOrg.com/443" 2>/dev/null && vPort='OPEN' || vPort='CLOSED' ; echo "$vPort"
timeout 2 2>/dev/null bash -c "</dev/tcp/snow.junkit.net/443"   2>/dev/null && vPort='OPEN' || vPort='CLOSED' ; echo "$vPort"

AIX
bash -c "</dev/tcp/snow.junkit.net/443"   2>/dev/null && vPort='OPEN' || vPort='CLOSED' ; echo "$vPort"

................................................................................
How to clear the SSSD cache and restart SSSD:

Do before trying to log in with a user that has been added to as group. This
will ensure their group memberships are read again and not pulled from cache.

sss_cache -E ; systemctl stop sssd ; rm -f /var/lib/sss/db/* ; systemctl start sssd

................................................................................
Wait until the in-memory cache has been expired. To expire it manually:

sss_cache --users

................................................................................
Replace field based on pattern:

awk:
gsub(regexp, replacement [, target])

awk -F, '{ gsub(/^pattern/, "replacement", FieldNumber); print }' fileName.csv
awk '{ gsub(/regular_expression/, "replacement", $field); print }' filename

replace any number sequence followed by a letter ‘G’ (like 4G, 5G) with Standard:
awk -F, '{ gsub(/[0-9]+G/, "Standard", $3); print }' OFS=, service_details.txt

in-place edit:
awk '{ gsub(/pattern/, "replacement", $field); print }' filename > temp && mv temp filename

case-insensitive substitution:
awk '{ gsub(tolower(/pattern/), "replacement", tolower($field)); print }' filename

If you want to replace ‘Inactive’ with ‘Offline’ but only for users with ‘4G’, the command will be:
awk '{ if ($2 == "4G") gsub(/Inactive/, "Offline", $3); print }' network_status.txt


cat junk
12,plead,atgid,blue,66
13,notplead,notatgid,green,76
14,not,dotgid,purple,43

awk -F, '{ gsub(/^atgid/, "jumbo24", $3); print }' junk
12 plead jumbo24 blue 66
13,notplead,notatgid,green,76
14,not,dotgid,purple,43
15,not,dotgid,cyan,19

................................................................................
When editing a file or variable, the character class [:space:] comprises all
whitespace, (including newlines and carriage returns).

The character class [:blank:] is only capable of targeting horizontal
whitespace. This "whitespace" class targets (spaces and and tabs) only!

sed $'s/ *\t/\t/' < file

would remove the spaces before the first tab. Here assuming a shell like
ksh93, bash, zsh, mksh or FreeBSD sh with support for $'...' (which is
scheduled for inclusion in issue 8 of the Single UNIX Specification).

Some sed implementations like GNU sed also recognize those \t directly:
sed 's/ *\t/\t/' file

Otherwise, POSIXly, you can do:
TAB=$(printf '\t')
sed "s/ *$TAB/$TAB/" file

You can also do the same with awk POSIXly:
awk '{sub(/ *\t/, "\t"); print}'

................................................................................

trim_all_white_spaces() {
  set -- $*
  printf '%s\n' "$*"
}

................................................................................
Align text with printf:

echo "$status" | awk '{printf("%s %s %-20s %20s %s %s\n", $1, $2, $3, $4, $5, $6)}'
ps -efl | awk '{ printf "%-8d%-10s%-50s\n",$4,$14,$15 }'

................................................................................
How to automatically renew Kerberos (krb5) tickets under SSSD:

#!/bin/bash
for f in $( ls -1 /tmp/krb5cc* 2> /dev/null )
do
   OWNER=$( ls -l $f | awk '{print $3}' )
   GROUP=$( ls -l $f | awk '{print $4}' )
   EXPIRE_TIME=$( date -d "$( klist -c $f | grep krbtgt | awk '{print $3, $4}' )" +%s )
   if [ $( expr $EXPIRE_TIME - $( date +%s ) ) -le 300 ]; then
      kinit -R -c $f
      chown $OWNER:$GROUP $f
   fi
done


NOTES:
======

Automatic Kerberos Host Keytab Renewal:
---------------------------------------
SSSD automatically renews the Kerberos host keytab file in an AD environment if
the adcli package is installed. The daemon checks daily if the machine account
password is older than the configured value and renews it if necessary.

The default renewal interval is 30 days. To change the default:
Add the following parameter to the AD provider in your /etc/sssd/sssd.conf file:

ad_maximum_machine_account_password_age = value_in_days

Restart SSSD:
# systemctl restart sssd

To disable the automatic Kerberos host keytab renewal, set
ad_maximum_machine_account_password_age = 0

................................................................................

Synopsis: If there are requirements for a server to mount a cifs share, then
          let this be a guide to accomplishing this task. The idea behind this
          procedure is to ensure that the KRB5 ticketing remains "refreshed"
          and passworded with the service account that is responsible for
          mounting the cifs share as a mountpoint of *ix.

    NOTE! Do keep in mind that the procedure below has to be "re-done" after
    ***** the CyberArk AD account has had its password changed! I spoke to
          Red Hat regarding this and they verified that to be th case...


--------------------------------------------------------------------------------

01. Under the directory below, create a file named cifs.spnego.conf if not
    already there:

  * /etc/request-key.d
 -> vim /etc/request-key.d/cifs.spnego.conf

................................................................................

02. Place the below line inside the cifs.spnego.conf file as depicted below:

 -> create  cifs.spnego    * * /usr/sbin/cifs.upcall -K /var/kerberos/krb5/user/cifs_service_account.keytab -t %k
 
  * Save this file with a 
 -> :wq <Enter> # in vim, of course!

................................................................................

03. Change directory and launch the keytab utility as depicted below:

 -> cd /etc/sssd
 -> ktutil

................................................................................

04. Add an entry for an AD-based CA userID that is responsible for cifs mounts:

 -> kutil:  add_entry -password -p App-1474-ADF-svc -k 0 -e aes256-cts-hmac-sha1-96 -f

     * When prompted, as shown below, enter the appropriate password for the
       above userID used in the cifs authentication to AD:

    -> Password for app-1474-adf-svc@PROD.junkIT.NET: myPassword <Enter>

................................................................................

05. Now, go ahead and save the new keytab file as depicted below:

 -> kutil:  write_kt /var/kerberos/krb5/user/cifs_service_account.keytab

................................................................................

06. End the kutil edit keytab session by typing one of two possible choices:

 -> kutil:  quit <Enter>
 -> kutil:  q <Enter>

................................................................................

07. Next, go ahead and validate/verify the keytab edit session:

 -> klist -kte /var/kerberos/krb5/user/cifs_service_account.keytab

    You should see the below with the appropriate details:
    ......................................................

 -> Keytab name: FILE:/var/kerberos/krb5/user/cifs_service_account.keytab
 -> KVNO Timestamp           Principal
 -> ---- ------------------- ------------------------------------------------------
 ->    0 01/24/2025 02:11:46 app-1474-adf-svc@PROD.junkIT.NET (aes256-cts-hmac-sha1-96)


    NOTE: Your entries will reflect the detailed entries you made, such as the
          userID and date of course...

................................................................................

08. OK, now that the kerberos keytab has been completed, let's discuss the
    actual mountpoint for the filesystem in Linux.  Edit the /etc/fstab file:

 -> vim /etc/fstab

................................................................................

09. Add the entry that will be responsive to the need for the cifs share
    being mounted each time the server is restarted:

    Use the below to be a reference to adding this mount. Note the lack of
    a credentials=someFile within each mount. The Kerberos ticketing will
    handle the requests by the KDC to authenticate and thereby relieve us of
    having to maintain the credential file:

 -> //pbnaprodnas08.prod.junkit.net/ADF-PROD   /ADF-PROD     cifs   sec=krb5,username=app-1474-adf-svc,uid=app-1474-adf-svc,gid=app-1474-adf-modify,file_mode=0775,dir_mode=0775,nobrl,mfsymlinks   0   0
 -> //pbnaaedb025.prod.junkit.net/BulkInsert   /BulkInsert   cifs   sec=krb5,username=app-1474-adf-svc,uid=app-1474-adf-svc,gid=app-1474-adf-modify,file_mode=0775,dir_mode=0775,nobrl,mfsymlinks   0   0

................................................................................

10. Now that we are finished with the fstab entries, save the file as below:

 -> :wq <Enter> # inside vim of course!

................................................................................

11. Perform the below follow-up configuartion updates to refresh the systemD
    and SSSD service units:

 -> systemctl daemon-reload
 -> systemctl restart sssd.service

................................................................................

12. Finally, verify the SSSD service unit is actually live and unblemished by
    any critical errors or warnings that are displayed.  See the below example:

 -> systemctl status sssd.service

    ● sssd.service - System Security Services Daemon
   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled; vendor preset: enabled)
   Active: active (running) since Sun 2025-02-09 08:28:46 CST; 1 months 2 days ago
 Main PID: 1907 (sssd)
    Tasks: 5 (limit: 524565)
   Memory: 75.7M
   CGroup: /system.slice/sssd.service
           ├─1907 /usr/sbin/sssd -i --logger=files
           ├─1926 /usr/libexec/sssd/sssd_be --domain prod.junkIT.net --uid 0 --gid 0 --logger=files
           ├─1994 /usr/libexec/sssd/sssd_nss --uid 0 --gid 0 --logger=files
           ├─1995 /usr/libexec/sssd/sssd_pam --uid 0 --gid 0 --logger=files
           └─1996 /usr/libexec/sssd/sssd_pac --uid 0 --gid 0 --logger=files

Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;2590186088.sig-pbnaaedc0101.prod.junkit.net. ANY TKEY
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;; ADDITIONAL SECTION:
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: 2590186088.sig-pbnaaedc0101.prod.junkit.net. 0 ANY TKEY gss-tsig. 1741967710 1741967710 3 NOERROR 1676 YIIGiAY>
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: Outgoing update query:
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;; ->>HEADER<<- opcode: UPDATE, status: NOERROR, id:  25955
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;; flags:; ZONE: 1, PREREQ: 0, UPDATE: 1, ADDITIONAL: 1
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;; UPDATE SECTION:
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: pl-bnaaeadfap05.prod.junkit.net. 0 ANY AAAA
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: ;; TSIG PSEUDOSECTION:
Mar 14 10:55:10 pl-bnaaeadfap05.prod.junkit.net sssd[1855531]: 2590186088.sig-pbnaaedc0101.prod.junkit.net. 0 ANY TSIG gss-tsig. 1741967710 300 28 BAQE//////8AAAAADnCEUgu21W>
~

................................................................................

13. Finally, mount the cifs share as your new *ix filesystem as seen below:

 -> mount /cifsShareMountPoint

................................................................................

14. Finished! So long as the above FS mount was a success...?

................................................................................

We can see that the command used was the "mount" command and it exited with 0 which is a non error exit code. We'll need data for the command that is failing. From the case summary, the failing command is "touch /ADF-TRAFFIC/test". Is this correct?

 If so please upload a new set of data using this command with the strace

NOTE: Please replace ethX with the appropriate network interface name.)

   # tcpdump -s 0 -n -i ethX -w /tmp/$(hostname)-$(date +"%Y-%m-%d-%H-%M-%S").pcap &
   # strace -Tttvfs 4096 -o /tmp/CASENUMBER.trace touch /ADF-TRAFFIC/test       <<<---------------touch commmand  
   # killall tcpdump

o Please upload the resulting tarball from /tmp to the case:
   # tar -cJf  /tmp/$(hostname)-$(date +"%Y-%m-%d-%H-%M-%S").tar.xz /tmp/*pcap /tmp/*trace

................................................................................
How to install a local rpm file:

install --assumeyes --nogpgcheck --disablerepo=* ./fileName.rpm

................................................................................
Updating certs:

Download the files into a tmp dir
/tmp/jnk

Copy them to /etc/pki/ca-trust/source/anchors:

  -> cp *.pem *.cer etc. /etc/pki/ca-trust/source/anchors/.

testOrg_ca2_full_chain.pem
testOrg_Internal_Issuing_CA2.cer
testOrg_Root_CA.cer

Finally, run the updater:

update-ca-trust

................................................................................
How to download all files html:

wget -r -np -nH --cut-dirs=3 -R index.html http://hostname/aaa/bbb/ccc/ddd/

It will download all files and subfolders in ddd directory

-r : recursively
-np : not going to upper directories, like ccc/…
-nH : not saving files to hostname folder
--cut-dirs=3 : but saving it to ddd by omitting first 3 folders aaa, bbb, ccc
-R index.html : excluding index.html files

Reference: http://bmwieczorek.wordpress.com/2008/10/01/wget-recursively-download-all-files-from-certain-directory-listed-by-apache/

................................................................................
The right way to run commands and have their output appended to the logs:

/path/to/command arg1 > >(tee -a $JOBLOG) 2> >(tee -a $ERRLOG >&2)

................................................................................
for loop issues and while loops too and such:

FOR LOOPS:
==========
for i in `echo "$theVars"`
do
   echo "$i"
done


WHILE LOOPS:
============
while read i ; do echo "$i" ; done < file.txt

while read i
do
   echo "$i"
done <<< "$myVars"

NOTE: Another thing to do is make newlines the only separator as below.  Then
      be sure to unset it:
IFS=$'\n'
do work
unset IFS

................................................................................
How to get the serial number of disk:

# smartctl -a /dev/sdb

smartctl 7.1 2020-04-05 r5049 [x86_64-linux-4.18.0-425.10.1.el8_7.x86_64] (local build)
Copyright (C) 2002-19, Bruce Allen, Christian Franke, www.smartmontools.org

=== START OF INFORMATION SECTION ===
Vendor:		      EMC
Product:	      SYMMETRIX
Revision:	      6544
Compliance:           SPC-3
User Capacity:        5,368,709,120 bytes [5.00 GB]
Logical block size:   512 bytes
Rotation Rate:        Solid State Device
Logical Unit id:      0x3600d0230000000000e11404639558820
Serial Number:        36002345D00LP
Device type:	      disk
Transport protocol:   Fibre channel (FCP-2)
Local Time is:        Mon Jul 17 22:48:21 2023 IST
SMART support is:     Available - device has SMART capability.
SMART support is:     Enabled
Temperature Warning:  Disabled or Not Supported

=== START OF READ SMART DATA SECTION ===
SMART Health Status:  OK
Current Drive Temperature:    0 C
Drive Trip Temperature:       0 C

Elements in grown defect list: 0

Error Counter logging not supported

Device does not support Self Test logging

................................................................................
How to list all unique directories from / or root?

CLI single server:
find / -maxdepth 1 -type d | sort -f | grep -Evw '/|/boot|/cert|/dev|/etc|/home|/media|/mnt|/net|/opt|/proc|/root|/run|/srv|/sys|/tmp|/usr|/var'

Processing a list:
for i in `cat snow-grp-2` ; do echo -e -n "$i:\n`ssh -q -tt psa-unixops-ra-10@$i find / -maxdepth 1 -type d | sort -f | grep -Evw '/|/boot|/cert|/dev|/etc|/home|/media|/mnt|/net|/opt|/proc|/root|/run|/srv|/sys|/tmp|/usr|/var'`\n\n" ; done

................................................................................
How to start as regular user switch to root and cd to directory upon logon:

Put the below into a file--sbl--and chmod 755:

ssh -q -tt psa-unixops-ra-10@pl-bnaaebljs104.prod.junkit.net 'sudo su - -c bash -c "cd work; exec bash --login -i" root' 2>/dev/null

NOTE: See below to examine the results:

[root@dl-bnaaetc021 misc]# sbl
[root@pl-bnaaebljs104 work]#

NOTE: It logs on via key to user psa-unixops-ra-10 and then to root where it
      places itself into the /root/work directory...

................................................................................
To show only specific lines (for example, 4-8, 12 and 42), you could do:

cat -n file | awk '$1>=4 && $1<=8 || $1==12 || $1==42'

If you also want to remove the field added by cat -n to get the original lines
from the file, you can do:

$ cat -n file | awk '$1>=4 && $1<=8 || $1==12 || $1==42{sub(/^\s*[0-9]+\s*/,""); print}'

................................................................................
How to logeverything being done via SSH:

You can add in /etc/rsyslog.conf:
local6.*               /var/log/commands.log

Next, restart rsyslog service and it will add a logger called local6.

Next, add the below into /etc/bashrc:
export PROMPT_COMMAND='RETRN_VAL=$?;logger -p local6.debug "$(whoami) [$$]: $(history 1 | sed "s/^[ ]*[0-9]\+[ ]*//" ) [$RETRN_VAL]"'

This will call rsyslog service local6 to log the last line of history with the
two users when sudo is used and root of course...

................................................................................
How to add a driver to initramfs for block device:

filesystem driver is either compiled in, or added manually to the initramfs:

................................................................................
Boot line parms:

rd.cmdline=ask prompts the user for additional kernel command line parameters
rd.skipfsck skip fsck for rootfs and /usr
rd.auto rd.auto=1 enable autoassembly of special devices like cryptoLUKS, dmraid, mdraid or lvm. Default is off as of dracut version >= 024.
rd.hostonly=0 removes all compiled in configuration of the host system the initramfs image was built on. This helps booting, if any disk layout changed, especially in combination with rd.auto or other parameters specifying the layout.
root=<path to blockdevice> specify the block device to use as the root filesystem
               root=/dev/sda1
               root=/dev/disk/by-path/pci-0000:00:1f.1-scsi-0:0:1:0-part1
               root=/dev/disk/by-label/Root
               root=LABEL=Root
               root=/dev/disk/by-uuid/3f5ad593-4546-4a94-a374-bcfb68aa11f7
               root=UUID=3f5ad593-4546-4a94-a374-bcfb68aa11f7
               root=PARTUUID=3f5ad593-4546-4a94-a374-bcfb68aa11f7
rootfstype=<filesystem type> "auto" if not specified
rootflags=<mount options> specify additional mount options for the root filesystem. If not set, /etc/fstab of the real root will be parsed for special mount options and mounted accordingly
rd.emergency=[reboot|poweroff|halt] specify, what action to execute in case of a critical failure. rd.shell=0 also be specified
rd.driver.blacklist=<drivername>[,<drivername>,...] do not load kernel module <drivername>. This parameter can be specified multiple times
rd.driver.pre=<drivername>[,<drivername>,...] force loading kernel module <drivername>. This parameter can be specified multiple times
rd.ctty=<terminal device> specify the controlling terminal for the console. This is useful, if you have multiple "console=" arguments
rd.info print informational output though "quiet" is set

Debug
If you are dropped to an emergency shell, the file /run/initramfs/rdsosreport.txt is created, which can be saved to a (to be mounted by hand)
partition (usually /boot) or a USB stick. Additional debugging info can be produced by adding rd.debug to the kernel command line.
/run/initramfs/rdsosreport.txt contains all logs and the output of some tools. It should be attached to any report about dracut problems.
rd.shell allow dropping to a shell, if root mounting fails
rd.debug set -x for the dracut shell. If systemd is active in the initramfs, all output is logged to the systemd journal, which you can inspect with
"journalctl -ab". If systemd is not active, the logs are written to dmesg and /run/initramfs/init.log. If "quiet" is set, it also logs to the console

................................................................................
Ways to get the IP addresses of adapters:

Using the Forwarding Information Base table, at /proc/net/fib_trie:
awk '/32 host/ { print f } {f=$2}' <<< "$(</proc/net/fib_trie)"
awk '/32 host/ { print f } {f=$2}' /proc/net/fib_trie | sort -u | grep -v 127.0.0.1

................................................................................
How to convert hex to decimal and decimal to hex:

D2H:
01.  echo "obase=16;170"| bc
02.  printf "%x\n" 170

H2D:
01.  echo "ibase=16;AA"|bc
02.  printf "%d\n" 0xaa


Use in ~/.bashrc:
=================
h2d(){
  echo "ibase=16; $@"|bc
}
d2h(){
  echo "obase=16; $@"|bc
}

................................................................................

aespipe.x86_64 : AES-based encryption tool for tar/cpio and loop-aes imagemore



................................................................................
How to print the text between two patterns:

{pattern1}
print this
and this
and this too!
{pattern2}:

sed:
====
sed -n '/^pattern1/,/^pattern2/{p;/^pattern2/q}'
sed -n '/^pattern1/,${p;/^pattern2/q}'

................................................................................
The IPv4 CIDR Table:

NOTE: IPv4 addresses have 4 octets at 8 bits each and are 32-bit !
*****

................................................................................


CIDR   Subnet Mask       Wildcard Mask     Number of IPs   Usable IPs
====   ===============   ===============   =============   =============
/32    255.255.255.255   0.0.0.0           1               1
/31    255.255.255.254   0.0.0.1           2               2*
/30    255.255.255.252   0.0.0.3           4               2
/29    255.255.255.248   0.0.0.7           8               6
/28    255.255.255.240   0.0.0.15          16              14
/27    255.255.255.224   0.0.0.31          32              30
/26    255.255.255.192   0.0.0.63          64              62
/25    255.255.255.128   0.0.0.127         128             126
/24    255.255.255.0     0.0.0.255         256             254
/23    255.255.254.0     0.0.1.255         512             510
/22    255.255.252.0     0.0.3.255         1,024           1,022
/21    255.255.248.0     0.0.7.255         2,048           2,046
/20    255.255.240.0     0.0.15.255        4,096           4,094
/19    255.255.224.0     0.0.31.255        8,192           8,190
/18    255.255.192.0     0.0.63.255        16,384          16,382
/17    255.255.128.0     0.0.127.255       32,768          32,766
/16    255.255.0.0       0.0.255.255       65,536          65,534
/15    255.254.0.0       0.1.255.255       131,072         131,070
/14    255.252.0.0       0.3.255.255       262,144         262,142
/13    255.248.0.0       0.7.255.255       524,288         524,286
/12    255.240.0.0       0.15.255.255      1,048,576       1,048,574
/11    255.224.0.0       0.31.255.255      2,097,152       2,097,150
/10    255.192.0.0       0.63.255.255      4,194,304       4,194,302
/9     255.128.0.0       0.127.255.255     8,388,608       8,388,606
/8     255.0.0.0         0.255.255.255     16,777,216      16,777,214
/7     254.0.0.0         1.255.255.255     33,554,432      33,554,430
/6     252.0.0.0         3.255.255.255     67,108,864      67,108,862
/5     248.0.0.0         7.255.255.255     134,217,728     134,217,726
/4     240.0.0.0         15.255.255.255    268,435,456     268,435,454
/3     224.0.0.0         31.255.255.255    536,870,912     536,870,910
/2     192.0.0.0         63.255.255.255    1,073,741,824   1,073,741,822
/1     128.0.0.0         127.255.255.255   2,147,483,648   2,147,483,646
/0     0.0.0.0           255.255.255.255   4,294,967,296   4,294,967,294
====   ===============   ===============   =============   =============


 -> * /31 is a special case detailed in RFC 3021 where networks with this
      type of subnet mask can assign two IP addresses as a point-to-point
      link. This is a table of the decimal to binary conversions for subnet
      mask and wildcard octets:


        Subnet Mask             Wildcard
        ===========             ========
0       00000000        255     11111111
128     10000000        127     01111111
192     11000000        63      00111111
224     11100000        31      00011111
240     11110000        15      00001111
248     11111000        7       00000111
252     11111100        3       00000011
254     11111110        1       00000001
255     11111111        0       00000000
        ===========             ========

NOTE: The wildcard is just the inverse of the subnet mask!
*****

................................................................................
Crypto Policies in RHEL:
========================

THE FAST-TRACK!
===============
update-crypto-policies --set FIPS


Policy   Description
=======  =======================================================================

LEGACY   This policy ensures maximum compatibility with legacy systems; it is
         less secure and it includes support for TLS 1.0, TLS 1.1, and SSH2
         protocols or later. The algorithms DSA, 3DES, and RC4 are allowed,
         while RSA and Diffie-Hellman parameters are accepted if larger than
         1023-bits.

DEFAULT  The DEFAULT policy is a reasonable default policy for today's
         standards, aimed for a balance between usability and security. It
         allows the TLS 1.2 and 1.3 protocols, as well as IKEv2 and SSH2. The
         RSA and Diffie-Hellman parameters are accepted if larger than
         2047-bits.

FUTURE   A conservative security level that is believed to withstand any near-
         term future attacks. The purpose of the policy is for testing
         infrastructure and applications for their readiness for future
         strengthening of requirements. The policy is not supposed to be used
         for general purpose systems. This level does not allow the use of SHA-1
         in signature algorithms. The RSA and Diffie-Hellman parameters are
         accepted if larger than 3071-bits.

FIPS     A level that conforms to the FIPS140-2 requirements. This policy is
         used internally by the fips-mode-setup tool which can switch the RHEL
         system into FIPS140 mode.

The backends that the crypto-policies support are the listed services/software
we see defined below. What this entails is; any use of the below services or
software is remediated to using the defined ciphers and keys contained or
defined by the parameters specified within these files:

/etc/crypto-policies/back-ends

gnutls.config......: GnuTLS library (GnuTLS, SSL, TLS)
openssl.config.....: OpenSSL library (OpenSSL, SSL, TLS)
nss.config.........: NSS library (NSS, SSL, TLS)
java.config........: OpenJDK (java-tls, SSL, TLS)
krb5.config........: Libkrb5 (krb5, kerberos)
bind.config........: BIND (BIND, DNSSec)
openssh.config.....: OpenSSH (OpenSSH, SSH)
libreswan.config...: Libreswan (libreswan, IKE, IPSec)
libssh.config......: libssh (libssh, SSH)

As an example of the FIPS remediated configuration, we can determine what one
may encounter whilst attempting an SSH session into a FIPS-enabled server. See
the defined characteristics one must abide by, just below:

/etc/crypto-policies/back-ends/opensshserver.config

CRYPTO_POLICY='
-oCiphers=aes256-gcm@openssh.com,aes256-ctr,aes256-cbc,aes128-gcm@openssh.com,aes128-ctr,aes128-cbc
-oMACs=hmac-sha2-256-etm@openssh.com,hmac-sha1-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256,hmac-sha1,hmac-sha2-512
-oGSSAPIKeyExchange=no
-oKexAlgorithms=ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512
-oHostKeyAlgorithms=ecdsa-sha2-nistp256,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp521-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com
-oPubkeyAcceptedKeyTypes=ecdsa-sha2-nistp256,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp521-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com
-oCASignatureAlgorithms=ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-256,rsa-sha2-512'

NOTE: Please note that the "curve" algorithm is not present and anyone unlucky
      enough to be running PuTTY against this server will find they must go to
      the ssh configuration within the PuTTY session and change the ordering of
      the "SSH/Kex" menu item and then go to the "Algorithm selection policy:"
      in the right pane to make an adjustment. This will entail moving the below
      item to the point below "-- warn below here --" so that it will no longer
      offer it up--in theory!:

 -- warn below here --      
 -> NTRU Prime / Curve25519 hybrid kex

Depending upon your version of PuTTY, you may also need to modify the ordering
of another algorithm, so that Diffie-Hellman is first. See below as to which of
the multiple "Diffie's" that we validated will actually work in FIPS mode:

 -> Diffie Hellman group exchange


Removed ciphersuites and protocols:
===================================
These ciphersuites and protocols are completely removed from the core crypto
libraries. They are either not present at all in the sources or their support is
disabled during the build so it cannot be used by applications in any way.

 -> DES (since RHEL-7)
 -> All export grade ciphersuites (since RHEL-7)
 -> MD5 in signatures (since RHEL-7)
 -> SSLv2 (since RHEL-7)
 -> SSLv3 (since RHEL-8)
 -> All ECC curves < 224 bits (since RHEL-6)
 -> All binary field ECC curves (since RHEL-6)


Disabled in all policy levels:
==============================
These ciphersuites and protocols are available but disabled in all crypto policy
levels. They can be enabled only by explicit configuration of individual
applications.

 -> DH with parameters < 1024 bits
 -> RSA with key size < 1024 bits
 -> Camellia
 -> ARIA
 -> SEED
 -> IDEA
 -> Integrity only ciphersuites
 -> TLS Ciphersuites using SHA-384 HMAC
 -> AES-CCM8
 -> all ECC curves incompatible with TLS 1.3, including secp256k1
 -> IKEv1 (since RHEL-8)

Disabled in DEFAULT policy, but enabled in LEGACY policy
==============================
These ciphersuites and protocols are disabled in the DEFAULT crypto policy
level. They can be enabled by switching the system crypto policy level to
LEGACY.

 -> 3DES
 -> RC4
 -> DH with parameters < 2048 bits
 -> RSA with key size < 2048 bits
 -> DSA (all key sizes)
 -> TLSv1.0
 -> TLSv1.1


Disabled in the FIPS policy in addition to the DEFAULT policy
==============================
The FIPS policy allows only FIPS approved or allowed algorithms. It must be used
when the system is required to be FIPS compliant. It is automatically selected
when enabling the system FIPS mode.

 -> SHA1 in digital signatures
 -> RSA key exchange
 -> X25519, X448, Ed25519 and Ed448
 -> Chacha20-Poly1305


Disabled in the FUTURE policy, but enabled in the DEFAULT policy:
=================================================================
The FUTURE policy provides additional hardening of the system. It is a
conservative security level that is believed to withstand any near-term future
attacks. The policy is not supposed to be used for general purpose systems.

 -> CBC mode ciphersuites in TLS
 -> Symmetric ciphers with smaller keys than 256 bits
 -> SHA-1 and SHA-224 signatures in certificates
 -> DH with parameters < 3072 bits
 -> RSA with key size < 3072 bits

Please note that most of the current WWW site certificates use just 2048 bits
RSA keys so it will not be possible to connect to most of the public WWW sites
with this policy.

Remediation of most common issues missing algorithms and protocol support:
==========================================================================
 -> Switching to the LEGACY policy can be done by issuing the command
    update-crypto-policies --set LEGACY from the root account.
 -> DH with small parameters - either switch to the LEGACY policy, or fix the
    TLS server to provide at least 2048 bit DH parameters, or use ECDH.
 -> SSLv3 - fix the TLS server to provide TLSv1.2 protocol (or at least TLSv1.0
    protocol and switch to the LEGACY policy).
 -> 3DES, RC4 - either switch to the LEGACY policy or fix the TLS server to
    provide AES based ciphersuites.
 -> RSA with small keys, DSA - either switch to the LEGACY policy or generate
    new keys (with at least 2048 bits but preferably more) and certificates for
    the TLS server.
 -> TLSv1.0, 1.1 - either switch to the LEGACY policy or update the TLS server
    to provide TLSv1.2 protocol support.
 -> SHA1 in signatures in FIPS mode - regenerate the certificates to use SHA256
    based signatures.
 -> Camellia, SEED, or ARIA - if the application configuration allows for
    modification of the ciphersuite configuration string, follow the
    documentation of the application to add these ciphersuites to the
    configuration string. Or remove the symlink to crypto policy configuration
    of the appropriate crypto library in /etc/crypto-policies/back-ends and
    replace it with configuration that will include the needed ciphersuite. Note
    that any modification described above, is unsupported by Red Hat. In the
    future we intend to provide a method create and use custom policies.
 -> IKEv1 - To opt out from the policy, comment the line including
    /etc/crypto-policies/back-ends/libreswan.config from /etc/ipsec.conf and add
    ikev2=never to the libreswan connection configuration.


................................................................................
How to loop over a nested loop:

for ip in {1..254};
   do for port in {22,80,443,3306,3389};
      do (echo >/dev/tcp/192.168.1.|$ip/$port) >& /dev/null && echo "192.168.1.$ip:$port is open";
   done;
done

................................................................................

UID 0       is always assigned to the superuser account, root.

UID 1-200   is a range of “system users” assigned statically to system processes
            by Red Hat.

UID 201-999 is a range of “system users” used by system processes that do not
            own ﬁles on the ﬁle system. They are typically assigned dynamically
            from the available pool when the software that needs them is
            installed. Programs run as these “unprivileged” system users in
            order to limit their access to only the resources they need to
            function.

UID 1000+   is the range available for assignment to regular users.

................................................................................
How to populate a variable with a command's STDERR output--aka 2> $aVariable :

ERROR=$( { CMD$ ; } 2>&1 )
or
ERROR=`{ $CMD ; } 2>&1`

echo -e -n "${ERROR}"

e.g.:
=====
CMD='sudo passwd -S unknownUser'
ERROR=$( { ${CMD} ; } 2>&1 )
echo "${ERROR}"
passwd: Unknown user name 'unknownUser'.

................................................................................
Logon processing:


01. The SSH daemon, via the pam_motd module of the PAM library, displays the
    contents of /etc/motd. Via the pam_env module, it sets the environment
    variables from /etc/environment and ~/.pam_environment.

02. A login shell is started, and the following files are read in order:
    01. /etc/profile
    02. /etc/bash.bashrc
        /etc/bash.bashrc).
    03. ~/.bash_profile. The other files that could have been read here
        (~/.profile and ~/.bash_login) are ignored because
        ~/.bash_profile exists.

................................................................................
/root/.reports directory:

sudo getfacl /root
==================
getfacl: Removing leading '/' from absolute path names
# file: root
# owner: root
# group: root
user::r-x
group::r-x
group:unix_onshore_admins:--x
mask::r-x
other::---

sudo getfacl /root/.reports
===========================
getfacl: Removing leading '/' from absolute path names
# file: root/.reports
# owner: root
# group: root
user::rwx
group::r-x
other::r-x

ls -dl /root
============
dr-xr-x---+ 16 root root 4096 Jun 11 04:52 /root

................................................................................
How to set the time with chronyd:

chronyd -q ‘server {ntp_server_name} iburst’

chronyd -q ‘server 10.93.16.25 iburst’

................................................................................
How to print the lines of an ini file block:

awk '/^\[/{p=(/^\[StartOnBoot/)} p' /etc/file.conf

or remove the blanks and hashed first:

grep -Ev "^#|^$" /etc/file.conf | awk '/^\[/{p=(/^\[StartOnBoot/)} p'

................................................................................
How to fix ownership and/or permissions on a package's file(s):

rpm --set-perms filesystem

The rpm allows you to restore the owner and permissions of files coming from a
rpm package. Run the below commands to reset permissions of files from all
installed packages:

rpm --setugids PACKAGE_NAME - sets user/group ownership of files in the given package.
rpm --setperms PACKAGE_NAME - sets permissions of files in the given package.

The -a (all) causes the restore procedure to be performed on all files of an rpm

rpm -a --setugids
rpm -a --setperms


Warning!: The order of the above commands are exceptionally important. The
          group and user association set operation in the --setugids command
          removes the SUID and SGID bits. Without re-applying them with the
          follow-up --setperms operation, utilities that rely on these bits
          will no longer function!

................................................................................
How to identify which rpm package a file comes from:

rpm -qf /etc/hosts

................................................................................
Search text for pattern and replace with a variable in one pass (Linux and AIX):

perl -pi -e 's/SERVERNAME/'"$TARGET"'/g' fileName.txt

................................................................................
How to set the default permissions and umask on an NFSv4 mount:

01. Mount the NFS share as NFSv4.2: The key here is to use NFSv4.2, as it allows
    the creation mask (umask) and file mode to be sent separately to the NFS
    server. This can be done by adding the vers=4.2 option when mounting the NFS
    share.

 -> mount -t nfs -o vers=4.2 <NFS_SERVER_IP>:/export/path /local/mount/point

02. Set the desired umask: You can set the umask for your shell session using
    the umask command. This will affect all file and directory creations during
    that session:

 -> umask 0022


Please Note:
************
The behavior of umask in NFSv4.2 is different from NFSv4.1.

In NFSv4.1, the umask is applied to the file permissions before the request is
sent to the NFS server, which can lead to unexpected results, especially when
default ACLs are in place.

In NFSv4.2, the file mode and umask are sent separately, allowing the NFS server
to compute file permissions based on the created file mode bits and local ACLs.

The above solution applies to Red Hat Enterprise Linux 7 and later versions. For
earlier versions, you might need to upgrade to a version that includes the
necessary NFSv4.2 support.

................................................................................
How-to mount an NFS/FS from an NFS server's exported filesystem:

SERVER's /etc/exports:
**********************
/srv/junk 192.168.1.0/255.255.255.0(rw,no_root_squash,nohide,no_subtree_check,all_squash,anonuid=1002,anongid=1003)

(The example ids are related to the example default user and need to match! Be
careful with whitespace even if it looks strange - not allowed here)


CLIENT's NFS mount in /etc/fstab:
*********************************
192.168.1.10:/srv/junk/ /junk nfs nofail,timeo=600,_netdev,users,rw 0 0


UMASK:
******
Change ALL user logins UMASK from 022 to 002:

/etc/login.defs

UMASK 002

................................................................................
Where are the active iptables rules stored?

The active iptables rules are stored in memory. They are not persistent across
reboots unless explicitly saved to disk. 

To save the current iptables rules to a file, you can use the `iptables-save`
command. This will output the rules in a format that can be read by
`iptables-restore`. 

iptables-save > /etc/sysconfig/iptables

This command saves the current iptables rules to the file:
/etc/sysconfig/iptables 

To restore these rules after a reboot, you would use the `iptables-restore`
command:

iptables-restore < /etc/sysconfig/iptables

This command reads the rules from the file `/etc/sysconfig/iptables` and
reapplies them.

Please note that the exact method might vary slightly depending on your Linux
distribution and version.

................................................................................
How to create a self-signed HTTPS certificate:

01. Generate a private key. This key will be used to sign your certificate:
    .......................................................................
 -> openssl genrsa -out server.key 2048
    Or:
 -> openssl genrsa -out server.key 4096

    NOTE: The above gens a 2048/4096 bit RSA private key and saves the file
          named "server.key"


02. Create a Certificate Signing Request (CSR): This step is optional, but
    recommended. It allows you to provide details about your organization when
    generating the certificate:
    ..........................................................................
 -> openssl req -new -key server.key -out server.csr

    NOTE: You will be prompted to enter details such as country, state, etc.


03. Generate the self-signed certificate: This command will create a certificate
    signed by the key you generated in step 01:
    ............................................................................
 -> openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

    NOTE: This command creates a certificate valid for 365 days, signed by the
          private key `server.key`, and saves it to `server.crt`


Now you have a self-signed certificate (`server.crt`) and a private key
(`server.key`). You can use these to configure your web server (like Apache or
 Nginx) to serve HTTPS traffic.

Please note that self-signed certificates are not trusted by default by most
browsers, as they are not signed by a trusted Certificate Authority (CA). They
are typically used for testing purposes. For production use, you should obtain
a certificate from a trusted CA.


04. Placement of the new self-signed certificate you created will be vital in
    the final step of this procedure. Copy the certificate "server.crt" into
    the below directory:

 -> cp server.crt /etc/pki/ca-trust/source/anchors/.


05. Finally, in order to update the system-wide truststore configuration, use
    the update-ca-trust command as depicted below:
    ...........................................................................
 -> update-ca-trust


NOTE: Even though the Firefox browser can use an added certificate without a
      prior execution of update-ca-trust, enter the update-ca-trust command
      after every CA change. Also note that browsers, such as Firefox, Chromium,
      and GNOME Web cache files, and you might have to clear your browser’s
      cache or restart your browser to load the current system certificate
      configuration.

................................................................................
How to run multiple commands over ssh:

Running local bash scripts on remote servers
 - Create a shell script as follows:
   #!/bin/bash
   uptime
   date
   whoami

Now run it as follows on host named server1.cyberciti.biz:
ssh vivek@server1.cyberciti.biz 'bash -s' < /path/to/test.sh

Same on 4 boxes:
for s in server{1..4}.cyberciti.biz
do
   ssh vivek@${s} 'bash -s' < /home/vivek/bin/test.sh
done

................................................................................
Changing the permissions of a file:

Note: using chmod in a Unix-based system does affect certain timestamps, but it
does not change the modification time (mtime).

Here's a breakdown of the timestamps involved:

mtime (modification time): This timestamp reflects when the contents of a file
were last modified. Changing permissions doesn't alter the file's content, so
mtime remains unchanged.

ctime (change time): This timestamp indicates when the file's inode (which
stores metadata like permissions and ownership) was last modified. Since chmod
modifies the inode by changing permissions, it does update the ctime. 

While chmod does update the ctime, which is a timestamp, it might not be the
"timestamp" that users are typically thinking of (which is often the mtime
displayed by commands like ls -l).

You can use ls -lc to view the ctime:

[root@rhel ~]# ls -lc /etc/passwd* /etc/group*
-rw-r--r--. 1 root root  746 May 21 13:39 /etc/group
-rw-r--r--. 1 root root  772 May 21 13:39 /etc/group-
-rw-r--r--. 1 root root 1861 May 21 13:39 /etc/passwd
-rw-r--r--. 1 root root 1947 May 21 13:39 /etc/passwd-
[root@rhel ~]# chmod 600 /etc/passwd-
[root@rhel ~]# chmod 600 /etc/group-
[root@rhel ~]# ls -lc /etc/passwd* /etc/group*
-rw-r--r--. 1 root root  746 May 21 13:39 /etc/group
-rw-------. 1 root root  772 Jul  1 13:02 /etc/group-
-rw-r--r--. 1 root root 1861 May 21 13:39 /etc/passwd
-rw-------. 1 root root 1947 Jul  1 13:01 /etc/passwd-

................................................................................
Good alias:

# display only pertinent lines of a file:
alias ftgrep='grep -Ev "^\s*#|^$"'

................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................

